
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "drive_examples/current_vector/plot_2kw_im_sat_cvc.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_drive_examples_current_vector_plot_2kw_im_sat_cvc.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_drive_examples_current_vector_plot_2kw_im_sat_cvc.py:


2.2-kW saturated IM, CVC
========================

This example simulates sensorless current-vector control (CVC) of a 2.2-kW induction
motor (IM) drive. The magnetic saturation is included in the machine model, while the
control system uses constant parameters.

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: Python

    from math import pi

    import motulator.drive.control.im as control
    from motulator.drive import model, utils








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 19-23

.. code-block:: Python


    nom = utils.NominalValues(U=400, I=5, f=50, P=2.2e3, tau=14.6)
    base = utils.BaseValues.from_nominal(nom, n_p=2)








.. GENERATED FROM PYTHON SOURCE LINES 24-26

The main-flux saturation in the system model is modeled based on [#Qu2012]_. The
default parameters correspond to the measured data of a 2.2-kW machine.

.. GENERATED FROM PYTHON SOURCE LINES 26-33

.. code-block:: Python



    def L_s(psi: float, L_su: float = 0.34, beta: float = 0.84, S: float = 7) -> float:
        """Stator inductance saturation model."""
        return L_su / (1 + (beta * psi) ** S)









.. GENERATED FROM PYTHON SOURCE LINES 34-35

Configure the system model.

.. GENERATED FROM PYTHON SOURCE LINES 35-46

.. code-block:: Python


    # Γ-equivalent machine model with main-flux saturation included
    par = model.InductionMachinePars(n_p=2, R_s=3.7, R_r=2.5, L_ell=0.023, L_s=L_s)
    # Unsaturated machine model, using its inverse-Γ parameters (uncomment to try)
    # par = model.InductionMachineInvGammaPars(
    #     n_p=2, R_s=3.7, R_R=2.1, L_sgm=0.021, L_M=0.224)
    machine = model.InductionMachine(par)
    mechanics = model.MechanicalSystem(J=0.015)
    converter = model.VoltageSourceConverter(u_dc=540)
    mdl = model.Drive(machine, mechanics, converter, pwm=False, delay=1)








.. GENERATED FROM PYTHON SOURCE LINES 47-48

Configure the control system.

.. GENERATED FROM PYTHON SOURCE LINES 48-60

.. code-block:: Python


    # Machine model parameter estimates
    est_par = control.InductionMachineInvGammaPars(
        n_p=2, R_s=3.7, R_R=2.1, L_sgm=0.021, L_M=0.224
    )
    # est_par = par  # Uncomment this line to use the perfectly known machine model
    cfg = control.CurrentVectorControllerCfg(psi_s_nom=base.psi, i_s_max=1.5 * base.i)
    vector_ctrl = control.CurrentVectorController(est_par, cfg, sensorless=True)
    speed_ctrl = control.SpeedController(J=0.015, alpha_s=2 * pi * 4)
    # speed_ctrl = control.PIController(k_p=1, k_i=1)
    ctrl = control.VectorControlSystem(vector_ctrl, speed_ctrl)








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Speed reference and the external load torque.

.. GENERATED FROM PYTHON SOURCE LINES 62-71

.. code-block:: Python


    # Acceleration and load torque step
    ctrl.set_speed_ref(lambda t: (t > 0.2) * 0.5 * base.w_M)
    mdl.mechanics.set_external_load_torque(lambda t: (t > 0.75) * nom.tau)

    # Field-weakening (uncomment to try)
    # ctrl.set_speed_ref(lambda t: (t > 0.2) * 2 * base.w_M)
    # mdl.mechanics.set_external_load_torque(lambda t: (t > 0.8) * 0.5 * nom.tau)








.. GENERATED FROM PYTHON SOURCE LINES 72-73

Create the simulation object, simulate, and plot the results in per-unit values.

.. GENERATED FROM PYTHON SOURCE LINES 73-78

.. code-block:: Python


    sim = model.Simulation(mdl, ctrl)
    res = sim.simulate(t_stop=1.5)
    utils.plot(res, base)  # Plot results in per-unit values




.. image-sg:: /drive_examples/current_vector/images/sphx_glr_plot_2kw_im_sat_cvc_001.png
   :alt: plot 2kw im sat cvc
   :srcset: /drive_examples/current_vector/images/sphx_glr_plot_2kw_im_sat_cvc_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 79-84

.. rubric:: References

.. [#Qu2012] Qu, Ranta, Hinkkanen, Luomi, "Loss-minimizing flux level control of
   induction motor drives," IEEE Trans. Ind. Appl., 2012,
   https://doi.org/10.1109/TIA.2012.2190818


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 5.221 seconds)


.. _sphx_glr_download_drive_examples_current_vector_plot_2kw_im_sat_cvc.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_2kw_im_sat_cvc.ipynb <plot_2kw_im_sat_cvc.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_2kw_im_sat_cvc.py <plot_2kw_im_sat_cvc.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_2kw_im_sat_cvc.zip <plot_2kw_im_sat_cvc.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
