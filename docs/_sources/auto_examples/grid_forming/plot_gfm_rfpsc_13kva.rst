
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/grid_forming/plot_gfm_rfpsc_13kva.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_grid_forming_plot_gfm_rfpsc_13kva.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_grid_forming_plot_gfm_rfpsc_13kva.py:


12.5-kVA converter, RFPSC
=========================
    
This example simulates reference-feedforward power-synchronization control 
(RFPSC) of a converter connected to a weak grid. 

.. GENERATED FROM PYTHON SOURCE LINES 11-17

.. code-block:: Python

    from motulator.common.model import VoltageSourceConverter, Simulation
    from motulator.common.utils import BaseValues, NominalValues
    from motulator.grid import model
    import motulator.grid.control.grid_forming as control
    from motulator.grid.utils import FilterPars, GridPars, plot_grid








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Compute base values based on the nominal values.

.. GENERATED FROM PYTHON SOURCE LINES 19-23

.. code-block:: Python


    nom = NominalValues(U=400, I=18, f=50, P=12.5e3)
    base = BaseValues.from_nominal(nom)








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Configure the system model.

.. GENERATED FROM PYTHON SOURCE LINES 25-47

.. code-block:: Python


    # Grid parameters
    grid_par = GridPars(u_gN=base.u, w_gN=base.w, L_g=.74*base.L)
    # Uncomment line below to simulate a strong grid
    # grid_par.L_g = 0

    # Filter parameters
    filter_par = FilterPars(L_fc=.15*base.L)

    # Create AC filter with given parameters
    ac_filter = model.ACFilter(filter_par, grid_par)

    # Grid voltage source with constant frequency and voltage magnitude
    grid_model = model.ThreePhaseVoltageSource(
        w_g=grid_par.w_gN, abs_e_g=grid_par.u_gN)

    # Inverter with constant DC voltage
    converter = VoltageSourceConverter(u_dc=650)

    # Create system model
    mdl = model.GridConverterSystem(converter, ac_filter, grid_model)








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Configure the control system.

.. GENERATED FROM PYTHON SOURCE LINES 49-61

.. code-block:: Python


    # Control configuration parameters
    cfg = control.RFPSCControlCfg(
        grid_par=grid_par,
        filter_par=filter_par,
        T_s=100e-6,
        max_i=1.3*base.i,
        R_a=.2*base.Z)

    # Create the control system
    ctrl = control.RFPSCControl(cfg)








.. GENERATED FROM PYTHON SOURCE LINES 62-63

Set the references for converter output voltage magnitude and active power.

.. GENERATED FROM PYTHON SOURCE LINES 63-71

.. code-block:: Python


    # Converter output voltage magnitude reference
    ctrl.ref.v = lambda t: grid_par.u_gN

    # Active power reference
    ctrl.ref.p_g = lambda t: ((t > .2)*(1/3) + (t > .5)*(1/3) + (t > .8)*(1/3) -
                              (t > 1.2))*nom.P








.. GENERATED FROM PYTHON SOURCE LINES 72-73

Create the simulation object and simulate it.

.. GENERATED FROM PYTHON SOURCE LINES 73-77

.. code-block:: Python


    sim = Simulation(mdl, ctrl)
    sim.simulate(t_stop=1.5)








.. GENERATED FROM PYTHON SOURCE LINES 78-79

Plot the results.

.. GENERATED FROM PYTHON SOURCE LINES 79-84

.. code-block:: Python


    # By default results are plotted in per-unit values. By omitting the argument
    # `base` you can plot the results in SI units.

    plot_grid(sim, base=base, plot_pcc_voltage=True)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/grid_forming/images/sphx_glr_plot_gfm_rfpsc_13kva_001.png
         :alt: plot gfm rfpsc 13kva
         :srcset: /auto_examples/grid_forming/images/sphx_glr_plot_gfm_rfpsc_13kva_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/grid_forming/images/sphx_glr_plot_gfm_rfpsc_13kva_002.png
         :alt: plot gfm rfpsc 13kva
         :srcset: /auto_examples/grid_forming/images/sphx_glr_plot_gfm_rfpsc_13kva_002.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 8.085 seconds)


.. _sphx_glr_download_auto_examples_grid_forming_plot_gfm_rfpsc_13kva.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_gfm_rfpsc_13kva.ipynb <plot_gfm_rfpsc_13kva.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_gfm_rfpsc_13kva.py <plot_gfm_rfpsc_13kva.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_gfm_rfpsc_13kva.zip <plot_gfm_rfpsc_13kva.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
