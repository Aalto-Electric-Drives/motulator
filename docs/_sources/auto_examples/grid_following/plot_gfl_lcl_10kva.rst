
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/grid_following/plot_gfl_lcl_10kva.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_grid_following_plot_gfl_lcl_10kva.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_grid_following_plot_gfl_lcl_10kva.py:


10-kVA converter, LCL filter
============================
    
This example simulates a grid-following-controlled converter connected to a
strong grid through an LCL filter. The control system includes a phase-locked
loop (PLL) to synchronize with the grid, a current reference generator, and a
PI-type current controller.

.. GENERATED FROM PYTHON SOURCE LINES 13-19

.. code-block:: Python

    from motulator.common.model import VoltageSourceConverter, Simulation
    from motulator.common.utils import BaseValues, NominalValues
    from motulator.grid import model
    import motulator.grid.control.grid_following as control
    from motulator.grid.utils import FilterPars, GridPars, plot_grid








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Compute base values based on the nominal values.

.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: Python


    nom = NominalValues(U=400, I=14.5, f=50, P=10e3)
    base = BaseValues.from_nominal(nom)








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Configure the system model.

.. GENERATED FROM PYTHON SOURCE LINES 27-51

.. code-block:: Python


    # Grid and filter parameters
    grid_par = GridPars(u_gN=base.u, w_gN=base.w)
    filter_par = FilterPars(L_fc=.073*base.L, L_fg=.073*base.L, C_f=.043*base.C)

    # DC-bus parameters
    ac_filter = model.ACFilter(filter_par, grid_par)

    # AC-voltage magnitude (to simulate voltage dips or short-circuits)
    abs_e_g_var = lambda t: grid_par.u_gN

    # AC grid model with constant voltage magnitude and frequency
    grid_model = model.ThreePhaseVoltageSource(
        w_g=grid_par.w_gN, abs_e_g=abs_e_g_var)

    # Inverter model with constant DC voltage
    converter = VoltageSourceConverter(u_dc=650)

    # Create system model
    mdl = model.GridConverterSystem(converter, ac_filter, grid_model)

    # Uncomment line below to enable the PWM model
    #mdl.pwm = CarrierComparison()








.. GENERATED FROM PYTHON SOURCE LINES 52-53

Configure the control system.

.. GENERATED FROM PYTHON SOURCE LINES 53-61

.. code-block:: Python


    # Control parameters
    cfg = control.GFLControlCfg(
        grid_par=grid_par, filter_par=filter_par, max_i=1.5*base.i)

    # Create the control system
    ctrl = control.GFLControl(cfg)








.. GENERATED FROM PYTHON SOURCE LINES 62-63

Set the time-dependent reference and disturbance signals.

.. GENERATED FROM PYTHON SOURCE LINES 63-68

.. code-block:: Python


    # Set the active and reactive power references
    ctrl.ref.p_g = lambda t: (t > .02)*5e3
    ctrl.ref.q_g = lambda t: (t > .04)*4e3








.. GENERATED FROM PYTHON SOURCE LINES 69-70

Create the simulation object and simulate it.

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: Python


    sim = Simulation(mdl, ctrl)
    sim.simulate(t_stop=.1)








.. GENERATED FROM PYTHON SOURCE LINES 75-76

Plot the results.

.. GENERATED FROM PYTHON SOURCE LINES 76-81

.. code-block:: Python


    # By default results are plotted in per-unit values. By omitting the argument
    # `base` you can plot the results in SI units.

    plot_grid(sim, base=base, plot_pcc_voltage=True)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/grid_following/images/sphx_glr_plot_gfl_lcl_10kva_001.png
         :alt: plot gfl lcl 10kva
         :srcset: /auto_examples/grid_following/images/sphx_glr_plot_gfl_lcl_10kva_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/grid_following/images/sphx_glr_plot_gfl_lcl_10kva_002.png
         :alt: plot gfl lcl 10kva
         :srcset: /auto_examples/grid_following/images/sphx_glr_plot_gfl_lcl_10kva_002.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.350 seconds)


.. _sphx_glr_download_auto_examples_grid_following_plot_gfl_lcl_10kva.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_gfl_lcl_10kva.ipynb <plot_gfl_lcl_10kva.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_gfl_lcl_10kva.py <plot_gfl_lcl_10kva.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_gfl_lcl_10kva.zip <plot_gfl_lcl_10kva.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
