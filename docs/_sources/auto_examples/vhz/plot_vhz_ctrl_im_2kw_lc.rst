
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/vhz/plot_vhz_ctrl_im_2kw_lc.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_vhz_plot_vhz_ctrl_im_2kw_lc.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_vhz_plot_vhz_ctrl_im_2kw_lc.py:


2.2-kW induction motor, LC filter
=================================

This example simulates open-loop V/Hz control of a 2.2-kW induction machine
drive equipped with an LC filter. 

.. GENERATED FROM PYTHON SOURCE LINES 10-16

.. code-block:: Python


    import numpy as np
    import matplotlib.pyplot as plt
    from motulator import model, control
    from motulator import BaseValues, NominalValues, plot








.. GENERATED FROM PYTHON SOURCE LINES 17-18

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 18-22

.. code-block:: Python


    nom = NominalValues(U=400, I=5, f=50, P=2.2e3, tau=14.6)
    base = BaseValues.from_nominal(nom, n_p=2)








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Create the system model. The filter parameters correspond to [#Sal2006]_.

.. GENERATED FROM PYTHON SOURCE LINES 24-33

.. code-block:: Python


    machine = model.InductionMachineInvGamma(  # Inverse-Γ parameters
        R_s=3.7, R_R=2.1, L_sgm=.021, L_M=.224, n_p=2)
    mechanics = model.Mechanics(J=.015)
    converter = model.Inverter(u_dc=540)
    lc_filter = model.LCFilter(L=8e-3, C=9.9e-6, R=.1)
    mdl = model.DriveWithLCFilter(converter, machine, mechanics, lc_filter)
    mdl.pwm = model.CarrierComparison()  # Enable the PWM model








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Control system (parametrized as open-loop V/Hz control).

.. GENERATED FROM PYTHON SOURCE LINES 35-41

.. code-block:: Python


    # Inverse-Γ model parameter estimates
    par = control.im.ModelPars(R_s=0*3.7, R_R=0*2.1, L_sgm=.021, L_M=.224)
    ctrl = control.im.VHzCtrl(
        control.im.VHzCtrlCfg(par, nom_psi_s=base.psi, k_u=0, k_w=0))








.. GENERATED FROM PYTHON SOURCE LINES 42-43

Set the speed reference and the external load torque.

.. GENERATED FROM PYTHON SOURCE LINES 43-50

.. code-block:: Python


    ctrl.ref.w_m = lambda t: (t > .2)*base.w

    # Quadratic load torque profile (corresponding to pumps and fans)
    k = 1.1*nom.tau/(base.w/base.n_p)**2
    mdl.mechanics.tau_L_w = lambda w_M: k*w_M**2*np.sign(w_M)








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Create the simulation object and simulate it.

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: Python


    sim = model.Simulation(mdl, ctrl)
    sim.simulate(t_stop=1.5)








.. GENERATED FROM PYTHON SOURCE LINES 57-58

Plot results in per-unit values.

.. GENERATED FROM PYTHON SOURCE LINES 58-62

.. code-block:: Python


    # sphinx_gallery_thumbnail_number = 2
    plot(sim, base)




.. image-sg:: /auto_examples/vhz/images/sphx_glr_plot_vhz_ctrl_im_2kw_lc_001.png
   :alt: plot vhz ctrl im 2kw lc
   :srcset: /auto_examples/vhz/images/sphx_glr_plot_vhz_ctrl_im_2kw_lc_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 63-64

Plot additional waveforms.

.. GENERATED FROM PYTHON SOURCE LINES 64-90

.. code-block:: Python


    t_span = (1.1, 1.125)  # Time span for the zoomed-in plot
    mdl = sim.mdl  # Continuous-time data
    # Plot the converter and stator voltages (phase a)
    fig1, (ax1, ax2) = plt.subplots(2, 1)
    ax1.plot(
        mdl.data.t, mdl.converter.data.u_cs.real/base.u, label=r"$u_\mathrm{ca}$")
    ax1.plot(
        mdl.data.t, mdl.machine.data.u_ss.real/base.u, label=r"$u_\mathrm{sa}$")
    ax1.set_xlim(t_span)
    ax1.legend()
    ax1.set_xticklabels([])
    ax1.set_ylabel("Voltage (p.u.)")
    # Plot the converter and stator currents (phase a)
    ax2.plot(
        mdl.data.t, mdl.converter.data.i_cs.real/base.i, label=r"$i_\mathrm{ca}$")
    ax2.plot(
        mdl.data.t, mdl.machine.data.i_ss.real/base.i, label=r"$i_\mathrm{sa}$")
    ax2.set_xlim(t_span)
    ax2.legend()
    ax2.set_ylabel("Current (p.u.)")
    ax2.set_xlabel("Time (s)")

    plt.tight_layout()
    plt.show()




.. image-sg:: /auto_examples/vhz/images/sphx_glr_plot_vhz_ctrl_im_2kw_lc_002.png
   :alt: plot vhz ctrl im 2kw lc
   :srcset: /auto_examples/vhz/images/sphx_glr_plot_vhz_ctrl_im_2kw_lc_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-96

.. rubric:: References

.. [#Sal2006] Salomäki, Hinkkanen, Luomi, "Sensorless control of induction
   motor drives equipped with inverter output filter," IEEE Trans. Ind.
   Electron., 2006, https://doi.org/10.1109/TIE.2006.878314


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 10.166 seconds)


.. _sphx_glr_download_auto_examples_vhz_plot_vhz_ctrl_im_2kw_lc.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_vhz_ctrl_im_2kw_lc.ipynb <plot_vhz_ctrl_im_2kw_lc.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_vhz_ctrl_im_2kw_lc.py <plot_vhz_ctrl_im_2kw_lc.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
