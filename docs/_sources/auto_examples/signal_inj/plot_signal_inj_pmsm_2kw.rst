
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/signal_inj/plot_signal_inj_pmsm_2kw.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_signal_inj_plot_signal_inj_pmsm_2kw.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_signal_inj_plot_signal_inj_pmsm_2kw.py:


2.2-kW PMSM
===========

This example simulates sensorless vector control of a 2.2-kW PMSM drive.
Square-wave signal injection is used with a simple phase-locked loop.

.. GENERATED FROM PYTHON SOURCE LINES 11-12

Imports.

.. GENERATED FROM PYTHON SOURCE LINES 12-18

.. code-block:: Python


    import numpy as np
    import matplotlib.pyplot as plt
    from motulator import model, control
    from motulator import BaseValues, Sequence, plot








.. GENERATED FROM PYTHON SOURCE LINES 19-20

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 20-24

.. code-block:: Python


    base = BaseValues(
        U_nom=370, I_nom=4.3, f_nom=75, tau_nom=14, P_nom=2.2e3, n_p=3)








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Configure the system model.

.. GENERATED FROM PYTHON SOURCE LINES 26-33

.. code-block:: Python


    machine = model.sm.SynchronousMachine(
        n_p=3, R_s=3.6, L_d=.036, L_q=.051, psi_f=.545)
    mechanics = model.Mechanics(J=.015)
    converter = model.Inverter(u_dc=540)
    mdl = model.sm.Drive(machine, mechanics, converter)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Configure the control system.

.. GENERATED FROM PYTHON SOURCE LINES 35-42

.. code-block:: Python


    par = control.sm.ModelPars(
        n_p=3, R_s=3.6, L_d=.036, L_q=.051, psi_f=.545, J=.015)
    ref = control.sm.CurrentReferencePars(par, w_m_nom=base.w, i_s_max=2*base.i)
    ctrl = control.sm.SignalInjectionCtrl(par, ref, T_s=250e-6)
    #ctrl.current_ctrl = control.sm.CurrentCtrl(par, 2*np.pi*100)








.. GENERATED FROM PYTHON SOURCE LINES 43-44

Set the speed reference and the external load torque.

.. GENERATED FROM PYTHON SOURCE LINES 44-54

.. code-block:: Python


    # Speed reference
    times = np.array([0, .25, .25, .375, .5, .625, .75, .75, 1])*4
    values = np.array([0, 0, 1, 1, 0, -1, -1, 0, 0])*base.w*.1
    ctrl.w_m_ref = Sequence(times, values)
    # External load torque
    times = np.array([0, .125, .125, .875, .875, 1])*4
    values = np.array([0, 0, 1, 1, 0, 0])*base.tau_nom
    mdl.mechanics.tau_L_t = Sequence(times, values)








.. GENERATED FROM PYTHON SOURCE LINES 55-56

Create the simulation object and simulate it.

.. GENERATED FROM PYTHON SOURCE LINES 56-60

.. code-block:: Python


    sim = model.Simulation(mdl, ctrl)
    sim.simulate(t_stop=4)








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Plot results in per-unit values.

.. GENERATED FROM PYTHON SOURCE LINES 62-78

.. code-block:: Python


    # Plot the "basic" figure
    plot(sim, base)

    # Plot also the angles
    mdl = sim.mdl.data  # Continuous-time data
    ctrl = sim.ctrl.data  # Discrete-time data
    plt.figure()
    plt.plot(mdl.t, mdl.theta_m, label=r"$\vartheta_\mathrm{m}$")
    plt.step(
        ctrl.t, ctrl.theta_m, where="post", label=r"$\hat \vartheta_\mathrm{m}$")
    plt.legend()
    plt.xlim(0, 4)
    plt.xlabel("Time (s)")
    plt.ylabel("Electrical angle (rad)")
    plt.show()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/signal_inj/images/sphx_glr_plot_signal_inj_pmsm_2kw_001.png
         :alt: plot signal inj pmsm 2kw
         :srcset: /auto_examples/signal_inj/images/sphx_glr_plot_signal_inj_pmsm_2kw_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_inj/images/sphx_glr_plot_signal_inj_pmsm_2kw_002.png
         :alt: plot signal inj pmsm 2kw
         :srcset: /auto_examples/signal_inj/images/sphx_glr_plot_signal_inj_pmsm_2kw_002.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 11.202 seconds)


.. _sphx_glr_download_auto_examples_signal_inj_plot_signal_inj_pmsm_2kw.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_signal_inj_pmsm_2kw.ipynb <plot_signal_inj_pmsm_2kw.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_signal_inj_pmsm_2kw.py <plot_signal_inj_pmsm_2kw.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
